{"version":3,"sources":["generated/graphql.tsx","components/Dashboard/Patreon.tsx","components/Dashboard/UserMenu.tsx","components/Dashboard/Navbar.tsx","pages/LandingPage.tsx","pages/NoMatch.tsx","components/Dashboard/FetchingData.tsx","components/Dashboard/FetchingNetworkError.tsx","components/Dashboard/guild/Settings.tsx","components/Dashboard/guild/components/UserJoins.tsx","components/Dashboard/guild/components/DailyStatistics.tsx","components/Dashboard/guild/Summary.tsx","components/Dashboard/guild/Main.tsx","components/Dashboard/NotInvited.tsx","components/Dashboard/GuildContent.tsx","components/Dashboard/NotSelected.tsx","components/Server.tsx","components/Dashboard/SideItem.tsx","components/Dashboard/Sidebar.tsx","pages/Dashboard.tsx","App.tsx","reportWebVitals.ts","theme.tsx","index.tsx"],"names":["LogoutDocument","gql","useLogoutMutation","Urql","CurrGuildDocument","GetGuildsDocument","MeDocument","useMeQuery","options","query","Patreon","colorScheme","bg","color","onClick","window","open","UserMenu","data","full","logout","display","w","src","me","id","avatar","size","m","username","discriminator","placeContent","a","Navbar","body","href","p","borderRadius","to","h","flex","width","borderBottom","borderColor","justifyContent","ml","margin","cursor","mr","spacing","label","aria-label","LandingPage","direction","alignItems","boxSize","mt","alt","objectFit","as","NoMatch","FetchingData","speed","emptyColor","FetchingNetworkError","MdError","Settings","UserJoins","text","position","fontSize","right","top","DailyStatistics","flexWrap","Math","ceil","Summary","Main","exact","path","component","NotInvited","handleClose","handleSorting","win","timer","setInterval","closed","clearInterval","requestPolicy","GuildContent","gid","useCurrGuildQuery","variables","pause","fetching","error","reExecute","useEffect","networkError","currGuild","NotSelected","Server","icon","name","inGuild","padding","placement","style","activeStyle","transition","border","SideItem","url","f","className","activeClassName","withRouter","meData","guildsData","history","useHistory","useParams","useRouteMatch","parseInt","pos","inset","bottom","left","float","alignContent","overflow","css","scrollbarWidth","map","guild","idx","in","pt","pb","push","MdOutlineSummarize","IoSettingsOutline","BsShield","borderTop","Dashboard","meFetching","useGetGuildsQuery","guilds","guildFetching","reGuildsQuery","useState","initialized","setInitialized","guildsState","setGuildsState","SortGuilds","sortedIns","sortedOuts","sortedGuilds","insList","filter","x","outsList","sort","b","localeCompare","meReady","setMeReady","isNaN","createBrowserHistory","App","Component","pageProps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","breakpoints","createBreakpoints","sm","md","lg","xl","theme","extendTheme","config","useSystemColorMode","initialColorMode","styles","global","html","colors","wuffel","nade","100","200","discord","fonts","mono","betterUpdateQuery","cache","qi","result","fn","updateQuery","client","createClient","fetchOptions","credentials","exchanges","dedupExchange","cacheExchange","updates","Mutation","_result","args","info","fetchExchange","ReactDOM","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.1842250c.chunk.js","sourcesContent":["import gql from 'graphql-tag';\nimport * as Urql from 'urql';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n};\n\nexport type DiscordGuilds = {\n  __typename?: 'DiscordGuilds';\n  features: Array<Scalars['String']>;\n  icon?: Maybe<Scalars['String']>;\n  id: Scalars['String'];\n  in?: Maybe<Scalars['Boolean']>;\n  name: Scalars['String'];\n  owner: Scalars['Boolean'];\n  permissions: Scalars['String'];\n  permissions_new: Scalars['String'];\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  createUser: Users;\n  logout: Scalars['Boolean'];\n};\n\n\nexport type MutationCreateUserArgs = {\n  options: UserInfo;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  currGuild: Settings;\n  guilds?: Maybe<Array<DiscordGuilds>>;\n  loginUser?: Maybe<Users>;\n  logoutUser: Scalars['Boolean'];\n  me?: Maybe<Users>;\n  user?: Maybe<UserResponse>;\n  users: UserResponse;\n};\n\n\nexport type QueryCurrGuildArgs = {\n  guildId: Scalars['String'];\n};\n\n\nexport type QueryLoginUserArgs = {\n  username: Scalars['String'];\n};\n\n\nexport type QueryUserArgs = {\n  userId: Scalars['String'];\n};\n\nexport type Settings = {\n  __typename?: 'Settings';\n  adminRole: Scalars['String'];\n  cleanup: Scalars['Boolean'];\n  disabledCommands: Scalars['String'];\n  id: Scalars['String'];\n  modRole: Scalars['String'];\n  muteRole: Scalars['String'];\n  prefix: Scalars['String'];\n  systemNotice: Scalars['Boolean'];\n};\n\nexport type UserResponse = {\n  __typename?: 'UserResponse';\n  errors?: Maybe<Array<UserError>>;\n  users?: Maybe<Array<Users>>;\n};\n\nexport type Users = {\n  __typename?: 'Users';\n  accent_color: Scalars['Float'];\n  avatar: Scalars['String'];\n  banner: Scalars['String'];\n  banner_color: Scalars['Float'];\n  createdAt: Scalars['String'];\n  discriminator: Scalars['String'];\n  email: Scalars['String'];\n  flags: Scalars['Float'];\n  guilds?: Maybe<Array<DiscordGuilds>>;\n  id: Scalars['String'];\n  locale: Scalars['String'];\n  mfa_enabled: Scalars['Boolean'];\n  premium_type: Scalars['Float'];\n  public_flags: Scalars['Float'];\n  updatedAt: Scalars['String'];\n  username: Scalars['String'];\n  verified: Scalars['Boolean'];\n};\n\nexport type UserError = {\n  __typename?: 'userError';\n  field: Scalars['String'];\n  message: Scalars['String'];\n};\n\nexport type UserInfo = {\n  email: Scalars['String'];\n  userId: Scalars['String'];\n  username: Scalars['String'];\n};\n\nexport type LogoutMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type LogoutMutation = { __typename?: 'Mutation', logout: boolean };\n\nexport type CurrGuildQueryVariables = Exact<{\n  gid: Scalars['String'];\n}>;\n\n\nexport type CurrGuildQuery = { __typename?: 'Query', currGuild: { __typename?: 'Settings', id: string, prefix: string, modRole: string, adminRole: string, muteRole: string, disabledCommands: string, systemNotice: boolean, cleanup: boolean } };\n\nexport type GetGuildsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetGuildsQuery = { __typename?: 'Query', guilds?: Array<{ __typename?: 'DiscordGuilds', id: string, name: string, icon?: string | null | undefined, owner: boolean, permissions: string, permissions_new: string, features: Array<string>, in?: boolean | null | undefined }> | null | undefined };\n\nexport type MeQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type MeQuery = { __typename?: 'Query', me?: { __typename?: 'Users', id: string, username: string, avatar: string, discriminator: string, locale: string, premium_type: number, email: string } | null | undefined };\n\n\nexport const LogoutDocument = gql`\n    mutation logout {\n  logout\n}\n    `;\n\nexport function useLogoutMutation() {\n  return Urql.useMutation<LogoutMutation, LogoutMutationVariables>(LogoutDocument);\n};\nexport const CurrGuildDocument = gql`\n    query currGuild($gid: String!) {\n  currGuild(guildId: $gid) {\n    id\n    prefix\n    modRole\n    adminRole\n    muteRole\n    disabledCommands\n    systemNotice\n    cleanup\n  }\n}\n    `;\n\nexport function useCurrGuildQuery(options: Omit<Urql.UseQueryArgs<CurrGuildQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<CurrGuildQuery>({ query: CurrGuildDocument, ...options });\n};\nexport const GetGuildsDocument = gql`\n    query getGuilds {\n  guilds {\n    id\n    name\n    icon\n    owner\n    permissions\n    permissions_new\n    features\n    in\n  }\n}\n    `;\n\nexport function useGetGuildsQuery(options: Omit<Urql.UseQueryArgs<GetGuildsQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<GetGuildsQuery>({ query: GetGuildsDocument, ...options });\n};\nexport const MeDocument = gql`\n    query Me {\n  me {\n    id\n    username\n    avatar\n    discriminator\n    locale\n    premium_type\n    email\n  }\n}\n    `;\n\nexport function useMeQuery(options: Omit<Urql.UseQueryArgs<MeQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<MeQuery>({ query: MeDocument, ...options });\n};","import { Button } from \"@chakra-ui/button\";\r\nimport { Flex } from \"@chakra-ui/layout\";\r\nimport { FC } from \"react\";\r\n\r\nexport const Patreon: FC = () => {\r\n  function handleClick() {\r\n    window.open(\"https://www.patreon.com/pl-PL\");\r\n  }\r\n  return (\r\n    <Flex>\r\n      <Button\r\n        colorScheme=\"red\"\r\n        bg=\"red.500\"\r\n        color=\"white\"\r\n        onClick={handleClick}\r\n      >\r\n        Patreon\r\n      </Button>\r\n    </Flex>\r\n  );\r\n};\r\n","import { Flex, Heading, Text } from \"@chakra-ui/layout\";\r\nimport { Menu, MenuButton, MenuList, MenuItem } from \"@chakra-ui/menu\";\r\nimport { Avatar, Portal } from \"@chakra-ui/react\";\r\nimport { FC } from \"react\";\r\nimport { MeQuery, useLogoutMutation } from \"../../generated/graphql\";\r\n\r\ninterface Props {\r\n  data: MeQuery;\r\n  full?: boolean;\r\n};\r\nexport const UserMenu: FC<Props> = ({ data, full }) => {\r\n  const [, logout] = useLogoutMutation();\r\n  return (\r\n    <Menu>\r\n      <MenuButton display=\"flex\" w=\"100%\">\r\n        <Flex>\r\n          <Avatar\r\n            src={`https://cdn.discordapp.com/avatars/${data!.me?.id}/${data!.me?.avatar}.png?size=48`}\r\n          />\r\n          {full ? (\r\n            <Heading size=\"sm\" m=\"auto 7px\">\r\n              {data!.me?.username + \"#\" + data!.me?.discriminator}\r\n            </Heading>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Flex>\r\n      </MenuButton>\r\n      <Portal>\r\n        <MenuList placeContent=\"end\">\r\n          <MenuItem>\r\n            <Text>Profile</Text>\r\n          </MenuItem>\r\n          <MenuItem onClick={async () => await logout()}>\r\n            <Text>Logout</Text>\r\n          </MenuItem>\r\n        </MenuList>\r\n      </Portal>\r\n    </Menu>\r\n  );\r\n};\r\n","import { Flex, Heading, HStack, Text } from \"@chakra-ui/layout\";\r\nimport { Tooltip } from \"@chakra-ui/react\";\r\nimport { FC } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useMeQuery } from \"../../generated/graphql\";\r\nimport { Patreon } from \"./Patreon\";\r\nimport { UserMenu } from \"./UserMenu\";\r\n\r\nexport const Navbar: FC = () => {\r\n  const [{ data }] = useMeQuery();\r\n  let body;\r\n\r\n  if (data && !data.me) {\r\n    body = (\r\n      <a href=\"https://discord.com/api/oauth2/authorize?client_id=613073438902452239&redirect_uri=http%3A%2F%2Flocalhost%3A4000%2Fdiscord%2Fauth%2Fcallback&response_type=code&scope=identify%20email%20guilds\">\r\n        <Text p={3} borderRadius={35}>\r\n          Login\r\n        </Text>\r\n      </a>\r\n    );\r\n  } else if (data?.me) {\r\n    body = (<>\r\n    <NavLink to=\"/dashboard\">\r\n        Dashboard\r\n    </NavLink>\r\n    <UserMenu data={data} /></>);\r\n  }\r\n\r\n  return (\r\n    <Flex\r\n      h=\"70px\"\r\n      flex={1}\r\n      width=\"100%\"\r\n      borderBottom=\"1px solid\"\r\n      borderColor=\"gray.600\"\r\n      justifyContent=\"space-between\"\r\n      bg=\"gray.700\"\r\n    >\r\n      <Flex ml=\"20px\">\r\n        <Heading color=\"wuffel\" margin=\"auto 0\" cursor=\"default\">\r\n          Wuffel\r\n        </Heading>\r\n      </Flex>\r\n      <Flex mr=\"20px\">\r\n        <HStack spacing=\"20px\">\r\n          <Tooltip label=\"Soon\" aria-label=\"Soon\">\r\n            <Text cursor=\"pointer\" color=\"gray.400\">Docs</Text>\r\n          </Tooltip>\r\n          <Patreon />\r\n          {body}\r\n        </HStack>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { Image } from \"@chakra-ui/image\";\r\nimport { Box, Flex, Heading, Text } from \"@chakra-ui/layout\";\r\nimport React, { FC } from \"react\";\r\nimport { Navbar } from \"../components/Dashboard/Navbar\";\r\n\r\nconst LandingPage: FC = () => {\r\n  function handleClick() {\r\n    window.open(\r\n      `https://discord.com/api/oauth2/authorize?client_id=613073438902452239&permissions=8&redirect_uri=http%3A%2F%2Flocalhost%3A3000%2Fplayground&scope=bot`,\r\n      \"targetWindow\",\r\n      `toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=no,width=400,height=700`\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Flex flex={1} direction=\"column\" alignItems=\"center\">\r\n        <Box boxSize=\"256px\" mt=\"150px\">\r\n          <Image\r\n            src=\"https://cdn.discordapp.com/app-icons/778035878932119602/39b999d289809ca49089db10372321b7.png?size=256\"\r\n            alt=\"Wuffel\"\r\n            objectFit=\"fill\"\r\n          />\r\n        </Box>\r\n        <Heading>\r\n          A all purpose{\" \"}\r\n          <Text as=\"span\" color=\"wuffel\">\r\n            bot\r\n          </Text>{\" \"}\r\n          for{\" \"}\r\n          <Text as=\"span\" color=\"discord\">\r\n            Discord\r\n          </Text>\r\n          !\r\n        </Heading>\r\n        <Box>\r\n          <Button\r\n            margin=\"50px auto\"\r\n            display=\"block\"\r\n            bg=\"#5865F2\"\r\n            size=\"lg\"\r\n            onClick={handleClick}\r\n          >\r\n            Invite me!\r\n          </Button>\r\n          {/* <Button>Try</Button> */}\r\n        </Box>\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import { FC } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const NoMatch: FC = () => <div>Not Found<Link to=\"/\">Home</Link></div>;\r\n","import { Box, Flex, Heading } from \"@chakra-ui/layout\";\r\nimport { Spinner } from \"@chakra-ui/spinner\";\r\nimport { FC } from \"react\";\r\n\r\nexport const FetchingData: FC = () => (\r\n  <Flex flex={1} justifyContent=\"center\">\r\n    <Box display=\"table\" margin=\"200px auto\">\r\n      <Spinner margin=\"auto\" display=\"block\" size=\"xl\" speed=\"0.4s\" emptyColor=\"gray.100\" color=\"gray.600\" />\r\n      <Heading margin=\"50px 0\">Fetching data...</Heading>\r\n    </Box>\r\n  </Flex>\r\n);\r\n","import Icon from \"@chakra-ui/icon\";\r\nimport { Flex, Box, Heading, Text } from \"@chakra-ui/layout\";\r\nimport { FC } from \"react\";\r\nimport { MdError } from \"react-icons/md\";\r\n\r\nexport const FetchingNetworkError: FC = () => (\r\n  <Flex flex={1} justifyContent=\"center\">\r\n    <Box display=\"table\" margin=\"200px auto\">\r\n      <Icon as={MdError} boxSize={10} color=\"red.400\" />\r\n      <Heading margin=\"50px 0\">\r\n        Encountered an error while fetching data.\r\n      </Heading>\r\n      <Text>Please try again in a moment or contact the service administrator.</Text>\r\n    </Box>\r\n  </Flex>\r\n);\r\n","import { FC } from \"react\";\r\n\r\nexport const Settings: FC = () => (\r\n    <>\r\n        Settings page.\r\n    </>\r\n)","import { Flex, Heading, Text } from \"@chakra-ui/layout\";\r\nimport { FC } from \"react\";\r\n\r\ninterface Props {\r\n  data: string;\r\n  text: string;\r\n  color: string;\r\n}\r\n\r\nexport const UserJoins: FC<Props> = ({ data, text, color }) => (\r\n  <Flex w=\"200px\" h=\"100px\" bg=\"gray.600\" position=\"relative\" p=\"15px 8px\">\r\n    <Heading color={color} fontSize=\"xxx-large\"  margin=\"auto 0\">{data}</Heading>\r\n    <Text fontSize=\"sm\" color=\"gray.400\" position=\"absolute\" right=\"8px\" top=\"5px\">\r\n      {text}\r\n    </Text>\r\n  </Flex>\r\n);\r\n","import { Flex, HStack  } from \"@chakra-ui/layout\";\r\nimport { FC } from \"react\";\r\nimport { UserJoins } from \"./UserJoins\";\r\n\r\ninterface Props {}\r\n\r\nexport const DailyStatistics: FC<Props> = () => {\r\n  return (\r\n    <Flex\r\n      flex={1}\r\n      direction=\"row\"\r\n      justifyContent=\"center\"\r\n      position=\"relative\"\r\n      mt=\"60px\"\r\n    >\r\n      <HStack spacing={16} flexWrap=\"wrap\">\r\n        <UserJoins data=\"1254\" text=\"total users\" color=\"white\" />\r\n        <UserJoins data=\"50\" text=\"joined in 24h\" color=\"green.500\" />\r\n        <UserJoins data=\"42\" text=\"left in 24h\" color=\"red.500\" />\r\n        <UserJoins data={`${Math.ceil((50/42) *100)/100}`} text=\"bilans\" color=\"white\" />\r\n      </HStack>\r\n    </Flex>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { DailyStatistics } from \"./components/DailyStatistics\";\r\n\r\nexport const Summary: FC = () => (\r\n    <>\r\n    <DailyStatistics />\r\n    </>\r\n)","import { FC } from \"react\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport { Settings } from \"./Settings\";\r\nimport { Summary } from \"./Summary\";\r\n\r\nexport const Main: FC = () => (\r\n    <>\r\n        <Switch>\r\n            <Route exact path=\"/playground/:id\" component={Summary} />\r\n            <Route path=\"/playground/:id/summary\" component={Summary} />\r\n            <Route path=\"/playground/:id/settings\" component={Settings} />\r\n        </Switch>\r\n    </>\r\n)","import { Button } from \"@chakra-ui/button\";\r\nimport { Image } from \"@chakra-ui/image\";\r\nimport { Box, Flex, Heading } from \"@chakra-ui/layout\";\r\nimport { OperationContext } from \"@urql/core\";\r\nimport { FC } from \"react\";\r\n\r\ninterface Props {\r\n  id: string;\r\n  handleClose: (opts?: Partial<OperationContext> | undefined) => void;\r\n  handleSorting: () => void;\r\n}\r\n\r\nexport const NotInvited: FC<Props> = ({ id, handleClose, handleSorting }) => {\r\n  function handleClick (){\r\n    const win = window.open(\r\n      `https://discord.com/api/oauth2/authorize?client_id=613073438902452239&permissions=8&redirect_uri=http%3A%2F%2Flocalhost%3A3000%2Fplayground&scope=bot&guild_id=${id}&disable_guild_select=true`,\r\n      \"targetWindow\",\r\n      `toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=no,width=400,height=700`\r\n    );\r\n\r\n    var timer = setInterval(async () => {\r\n      if(win?.closed) {\r\n          clearInterval(timer);\r\n          await handleClose({ requestPolicy: \"network-only\"});\r\n          handleSorting();\r\n      }\r\n  }, 1000);\r\n  }\r\n  return (\r\n    <Flex flex={1} justifyContent=\"center\">\r\n      <Box display=\"table\" margin=\"200px\">\r\n        <Image\r\n          src=\"https://i.imgur.com/iwUocCr.png\"\r\n          boxSize=\"150px\"\r\n          objectFit=\"cover\"\r\n          margin=\"auto\"\r\n        />\r\n        <Heading margin=\"50px 0\">I'm not invited to the party :(</Heading>\r\n          <Button\r\n          margin=\"50px auto\"\r\n            display=\"block\"\r\n            bg=\"#5865F2\"\r\n            size=\"lg\"\r\n            onClick={handleClick}\r\n          >\r\n            Invite me!\r\n          </Button>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n","import { FC, useEffect } from \"react\";\r\nimport { useCurrGuildQuery } from \"../../generated/graphql\";\r\nimport { FetchingData } from \"./FetchingData\";\r\nimport { FetchingNetworkError } from \"./FetchingNetworkError\";\r\nimport { Main } from \"./guild/Main\";\r\nimport { NotInvited } from \"./NotInvited\";\r\n\r\ninterface Props {\r\n  gid: string;\r\n  handleSorting: () => void;\r\n}\r\n\r\nexport const GuildContent: FC<Props> = ({ gid, handleSorting }) => {\r\n  const [{ data, fetching, error }, reExecute] = useCurrGuildQuery({ variables: { gid }, pause: true});\r\n  let body = <FetchingData />;\r\n\r\n  useEffect(() => {\r\n    reExecute({requestPolicy: \"network-only\"});\r\n    // eslint-disable-next-line\r\n  }, [gid]);\r\n\r\n  if (error?.networkError) {\r\n    return <FetchingNetworkError />;\r\n  }\r\n\r\n  if (!fetching && data)\r\n    body = <>{data?.currGuild === null ? <NotInvited id={gid} handleClose={reExecute} handleSorting={handleSorting} /> : <Main />}</>; \r\n\r\n  return body;\r\n};\r\n","import { Image } from \"@chakra-ui/image\";\r\nimport { Box, Flex, Heading } from \"@chakra-ui/layout\";\r\nimport { FC } from \"react\";\r\n\r\ninterface Props {}\r\n\r\nexport const NotSelected: FC<Props> = () => (\r\n  <Flex flex={1} justifyContent=\"center\">\r\n    <Box display=\"table\" margin=\"200px\" >\r\n      <Image\r\n        src=\"https://i.imgur.com/iwUocCr.png\"\r\n        boxSize=\"150px\"\r\n        objectFit=\"cover\"\r\n        margin=\"auto\"\r\n      />\r\n      <Heading margin=\"50px 0\">Please select a server first.</Heading>\r\n    </Box>\r\n  </Flex>\r\n);\r\n","import { Avatar, AvatarBadge } from \"@chakra-ui/avatar\";\r\nimport { WrapItem } from \"@chakra-ui/layout\";\r\nimport { Tooltip } from \"@chakra-ui/react\";\r\nimport { FC } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  icon?: string | null;\r\n  name: string;\r\n  id: string;\r\n  inGuild?: boolean | null;\r\n}\r\n\r\nexport const Server: FC<Props> = ({ icon, name, id, inGuild }) => {\r\n  return (\r\n    <WrapItem justifyContent=\"center\" margin=\"10px 0\" padding=\" 0 2px\">\r\n      <Tooltip label={name} placement=\"right\">\r\n        <NavLink style={{}} to={`/playground/${id}`} activeStyle={{transition: \"border-width 0.06s ease\", border: \"4px solid\", borderColor: \"var(--chakra-colors-wuffel)\", borderRadius: \"50%\"}}>\r\n          <Avatar src={`https://cdn.discordapp.com/icons/${id}/${icon}.png`} name={name}>\r\n            <AvatarBadge boxSize=\"1.25em\" bg={inGuild === true ? \"green.500\" : \"red.500\"} />\r\n          </Avatar>\r\n        </NavLink>\r\n      </Tooltip>\r\n    </WrapItem>\r\n  );\r\n};\r\n","import Icon from \"@chakra-ui/icon\";\r\nimport { Flex, Text } from \"@chakra-ui/layout\";\r\nimport { Menu, MenuButton } from \"@chakra-ui/menu\";\r\nimport { FC } from \"react\";\r\nimport { IconType } from \"react-icons\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Navbar.css\";\r\n\r\ninterface Props {\r\n  url: string;\r\n  icon: IconType;\r\n  p: string;\r\n}\r\n\r\nexport const SideItem: FC<Props> = ({ url, icon, p }) => (\r\n  <Flex f=\"1\">\r\n    <Menu>\r\n      <NavLink className=\"nav-link\" activeClassName=\"nav-active\" to={url}>\r\n        <MenuButton>\r\n          <Flex alignItems=\"center\">\r\n            <Icon as={icon} boxSize={5} mr={1} />\r\n            <Text>{p}</Text>\r\n          </Flex>\r\n        </MenuButton>\r\n      </NavLink>\r\n    </Menu>\r\n  </Flex>\r\n);\r\n","import { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Box, Flex, Heading, Text } from \"@chakra-ui/layout\";\r\nimport { Menu, MenuButton, MenuItem, MenuList } from \"@chakra-ui/menu\";\r\nimport { Portal } from \"@chakra-ui/portal\";\r\nimport { FC } from \"react\";\r\nimport {\r\n  useHistory,\r\n  useRouteMatch,\r\n  useParams,\r\n  withRouter,\r\n  RouteComponentProps,\r\n} from \"react-router-dom\";\r\nimport {\r\n  DiscordGuilds,\r\n  MeQuery,\r\n  useLogoutMutation,\r\n} from \"../../generated/graphql\";\r\nimport { Server } from \"../Server\";\r\nimport { MdOutlineSummarize } from \"react-icons/md\";\r\nimport { IoSettingsOutline } from \"react-icons/io5\"\r\nimport { BsShield } from \"react-icons/bs\"\r\nimport { SideItem } from \"./SideItem\";\r\n\r\ntype Props = {\r\n  meData: MeQuery | undefined;\r\n  guildsData: DiscordGuilds[] | null | undefined;\r\n} & RouteComponentProps;\r\n\r\nconst Sidebar: FC<Props> = ({ meData, guildsData }) => {\r\n  const history = useHistory();\r\n  const { id }: { id: string } = useParams();\r\n  const [, logout] = useLogoutMutation();\r\n  let { url } = useRouteMatch();\r\n\r\n  // useEffect(() => {\r\n  //   if (!meData?.me) {\r\n  //     history.push(\"/\");\r\n  //   }\r\n  // }, [history, meData]);\r\n\r\n  const handleClick = () => {\r\n    history.push(\"/\");\r\n  };\r\n  const parsed = parseInt(id, 10);\r\n  if (!parsed) {\r\n    url = \"/playground\";\r\n  }\r\n  return (\r\n    <Box pos=\"fixed\" inset=\"0\">\r\n      <Box pos=\"fixed\" bottom=\"0\" left=\"0\" top=\"0\">\r\n        <Box left=\"0\" bottom=\"0\" w=\"300px\" h=\"100%\">\r\n          <Box\r\n            float=\"left\"\r\n            w=\"70px\"\r\n            h=\"100%\"\r\n            bg=\"gray.800\"\r\n            alignContent=\"center\"\r\n            overflow=\"auto\"\r\n            css={{ scrollbarWidth: \"none\" }}\r\n          >\r\n            {guildsData !== null\r\n              ? guildsData?.map((guild, idx) => (\r\n                  <Server\r\n                    key={idx}\r\n                    id={guild.id}\r\n                    name={guild.name}\r\n                    icon={guild.icon}\r\n                    inGuild={guild.in}\r\n                  />\r\n                ))\r\n              : null}\r\n          </Box>\r\n          <Box h=\"100%\" bg=\"gray.700\">\r\n            <Flex\r\n              cursor=\"pointer\"\r\n              pt=\"10px\"\r\n              pb=\"10px\"\r\n              borderBottom=\"1px solid\"\r\n              borderColor=\"gray.600\"\r\n              onClick={() => handleClick()}\r\n            >\r\n              <Avatar\r\n                bg=\"none\"\r\n                src=\"https://cdn.discordapp.com/app-icons/778035878932119602/39b999d289809ca49089db10372321b7.png\"\r\n              />\r\n              <Heading m=\"auto 7px\" size=\"lg\" color=\"wuffel\">\r\n                Wuffel\r\n              </Heading>\r\n            </Flex>\r\n            <Box\r\n              overflow=\"auto\"\r\n              style={{ scrollbarWidth: \"none\" }}\r\n              pb=\"140px\"\r\n              h=\"100%\"\r\n            >\r\n              <SideItem\r\n                url={`${url}/summary`}\r\n                p=\"Summary\"\r\n                icon={MdOutlineSummarize}\r\n              />\r\n              <SideItem\r\n                url={`${url}/settings`}\r\n                p=\"Settings\"\r\n                icon={IoSettingsOutline}\r\n              />\r\n              <SideItem\r\n                url={`${url}/moderation`}\r\n                p=\"Moderation\"\r\n                icon={BsShield}\r\n              />\r\n            </Box>\r\n            <Box\r\n              w=\"230px\"\r\n              p=\"5px\"\r\n              pt=\"10px\"\r\n              pos=\"absolute\"\r\n              bottom=\"0\"\r\n              left=\"70px\"\r\n              borderTop=\"1px solid\"\r\n              borderColor=\"gray.600\"\r\n              bg=\"gray.700\"\r\n            >\r\n              <Menu>\r\n                <MenuButton display=\"flex\" w=\"100%\">\r\n                  <Flex>\r\n                    <Avatar\r\n                      src={`https://cdn.discordapp.com/avatars/${meData?.me?.id}/${meData?.me?.avatar}.png?size=48`}\r\n                    />\r\n                    <Heading size=\"sm\" m=\"auto 7px\">\r\n                      {meData?.me?.username + \"#\" + meData?.me?.discriminator}\r\n                    </Heading>\r\n                  </Flex>\r\n                </MenuButton>\r\n                <Portal>\r\n                  <MenuList placeContent=\"end\">\r\n                    <MenuItem>\r\n                      <Text>Profile</Text>\r\n                    </MenuItem>\r\n                    <MenuItem onClick={async () => await logout()}>\r\n                      <Text>Logout</Text>\r\n                    </MenuItem>\r\n                  </MenuList>\r\n                </Portal>\r\n              </Menu>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box pos=\"absolute\" inset=\"0 0 0 240px\"></Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default withRouter(Sidebar);\r\n","import { Box } from \"@chakra-ui/react\";\r\nimport { FC, useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { FetchingData } from \"../components/Dashboard/FetchingData\";\r\nimport { GuildContent } from \"../components/Dashboard/GuildContent\";\r\nimport { NotSelected } from \"../components/Dashboard/NotSelected\";\r\nimport Sidebar from \"../components/Dashboard/Sidebar\";\r\nimport {\r\n  DiscordGuilds,\r\n  useGetGuildsQuery,\r\n  useMeQuery,\r\n} from \"../generated/graphql\";\r\n\r\ninterface Props {}\r\n\r\nexport const Dashboard: FC<Props> = () => {\r\n  const [{ data: me, fetching: meFetching }] = useMeQuery();\r\n  const [\r\n    { data: guilds, fetching: guildFetching },\r\n    reGuildsQuery,\r\n  ] = useGetGuildsQuery({ pause: true });\r\n  const [initialized, setInitialized] = useState(false);\r\n  const [guildsState, setGuildsState] = useState(guilds?.guilds);\r\n  const { id }: { id: string } = useParams();\r\n  const history = useHistory();\r\n\r\n  const gid = parseInt(id);\r\n  let body = <FetchingData />;\r\n\r\n  function SortGuilds() {\r\n    let sortedIns = null;\r\n    let sortedOuts = null;\r\n    let sortedGuilds: DiscordGuilds[] = [];\r\n    if (guilds?.guilds) {\r\n      const insList = guilds.guilds.filter((x) => x.in);\r\n      const outsList = guilds.guilds.filter((x) => !x.in);\r\n\r\n      sortedIns = insList.sort((a, b) => b.name.localeCompare(a.name));\r\n      sortedOuts = outsList.sort((a, b) => a.name.localeCompare(b.name));\r\n      sortedIns.map((guild) => sortedGuilds.push(guild));\r\n      sortedOuts.map((guild) => sortedGuilds.push(guild));\r\n\r\n      setGuildsState(sortedGuilds);\r\n      setInitialized(true);\r\n\r\n      return sortedGuilds;\r\n    }\r\n    return null;\r\n  }\r\n  const [meReady, setMeReady] = useState(false);\r\n  useEffect(() => {\r\n\r\n    if (!me?.me && !meFetching) {\r\n      history.push(\"/\");\r\n      return;\r\n    } else if (me?.me && !meFetching) {\r\n      setMeReady(true);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [me, meFetching]);\r\n\r\n  useEffect(() => {\r\n    if (meReady) {\r\n      if (!guilds?.guilds && !guildFetching) {\r\n        reGuildsQuery();\r\n      } else if (guilds?.guilds && !guildFetching) {\r\n        SortGuilds();\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [meReady, guildFetching, guilds]);\r\n\r\n  if (meFetching || guildFetching || !initialized) {\r\n    return <FetchingData />;\r\n  }\r\n  if (me && me.me !== null && guilds && guilds.guilds !== null && initialized) {    \r\n    body = (\r\n      <>\r\n        <Sidebar meData={me} guildsData={guildsState} />\r\n        <Box ml=\"300px\">\r\n          {isNaN(gid) ? (\r\n            <NotSelected />\r\n          ) : (\r\n            <GuildContent gid={id} handleSorting={SortGuilds} />\r\n          )}\r\n        </Box>\r\n      </>\r\n    );\r\n  }\r\n  return body;\r\n};\r\n","import React, { ComponentClass, FC } from \"react\";\r\nimport \"./App.css\";\r\nimport { Route, Router, Switch } from \"react-router-dom\";\r\nimport LandingPage from \"./pages/LandingPage\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { NoMatch } from \"./pages/NoMatch\";\r\nimport { Dashboard } from \"./pages/Dashboard\";\r\n\r\ninterface Props {\r\n  Component?: ComponentClass;\r\n  pageProps?: Object;\r\n}\r\nconst history = createBrowserHistory();\r\n\r\nconst App: FC<Props> = ({ Component, pageProps }) => {\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={LandingPage} />\r\n        <Route path=\"/dashboard/:id?\" component={Dashboard} />\r\n        <Route path=\"/playground/:id?\" component={Dashboard} />\r\n        <Route component={NoMatch} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { extendTheme } from \"@chakra-ui/react\";\r\nimport { createBreakpoints } from \"@chakra-ui/theme-tools\";\r\n\r\nconst fonts = { mono: `'Menlo', monospace` };\r\n\r\nconst breakpoints = createBreakpoints({\r\n  sm: \"40em\",\r\n  md: \"52em\",\r\n  lg: \"64em\",\r\n  xl: \"80em\",\r\n});\r\n\r\nconst theme = extendTheme({\r\n  config: {\r\n    useSystemColorMode: false,\r\n    initialColorMode: \"dark\",\r\n  },\r\n  styles: {\r\n    global: {\r\n      body: {\r\n        bg: \"gray.900\",\r\n      },\r\n      html: {\r\n        bg: \"gray.900\",\r\n      }\r\n    },\r\n  },\r\n  colors: {\r\n    wuffel: \"#f9cf93\",\r\n    nade: {\r\n      100: \"#1e1e2c\",\r\n      200: \"#2f3142\",\r\n    },\r\n    discord: \"#5865F2\",\r\n  },\r\n  fonts,\r\n  breakpoints,\r\n});\r\n\r\nexport default theme;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport theme from \"./theme\";\r\nimport { createClient, dedupExchange, fetchExchange, Provider } from \"urql\";\r\nimport { Cache, cacheExchange, QueryInput } from \"@urql/exchange-graphcache\";\r\nimport { GetGuildsDocument, GetGuildsQuery, LogoutMutation, MeDocument, MeQuery } from \"./generated/graphql\";\r\n\r\nfunction betterUpdateQuery<Result, Query>(\r\n  cache: Cache,\r\n  qi: QueryInput,\r\n  result: any,\r\n  fn: (r: Result, q: Query) => Query\r\n) {\r\n  return cache.updateQuery(qi, (data) => fn(result, data as any) as any);\r\n}\r\n\r\nconst client = createClient({\r\n  url: \"http://localhost:4000/graphql\",\r\n  fetchOptions: {\r\n    credentials: \"include\",\r\n  },\r\n  exchanges: [\r\n    dedupExchange,\r\n    cacheExchange({\r\n      updates: {\r\n        Mutation: {\r\n          logout: (_result, args, cache, info) => {\r\n            betterUpdateQuery<LogoutMutation, MeQuery>(\r\n              cache,\r\n              { query: MeDocument },\r\n              _result,\r\n              (result, query) => {\r\n                if (result.logout) {\r\n                  return {\r\n                    me: null,\r\n                  };\r\n                } else {\r\n                  return query\r\n                }\r\n              }\r\n            );\r\n            betterUpdateQuery<LogoutMutation, GetGuildsQuery>(\r\n              cache,\r\n              { query: GetGuildsDocument },\r\n              _result,\r\n              (result, query) => {\r\n                if (result.logout) {\r\n                  return {\r\n                    guilds: null,\r\n                  };\r\n                } else {\r\n                  return query\r\n                }\r\n              }\r\n            );\r\n          },\r\n        },\r\n      },\r\n    }),\r\n    fetchExchange,\r\n  ],\r\n});\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <Provider value={client}>\r\n    <ChakraProvider theme={theme}>\r\n      <App />\r\n    </ChakraProvider>\r\n  </Provider>,\r\n  /* <App /> */\r\n  /* </React.StrictMode>, */\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}